# Generated by Django 4.2 on 2023-04-14 09:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import teams.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('Match_Number', models.DecimalField(decimal_places=0, max_digits=3, primary_key=True, serialize=False)),
                ('Venue', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Streamer', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Date', models.DateTimeField()),
                ('Umpire', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('Code', models.CharField(max_length=3, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[A-Z]{2,3}$', 'Only Capital-letters characters are allowed.')])),
                ('Name', models.CharField(max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('Name', models.CharField(max_length=50, primary_key=True, serialize=False, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Jersey_no', models.PositiveSmallIntegerField()),
                ('Price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('Age', models.DecimalField(decimal_places=0, max_digits=2)),
                ('Role', models.CharField(choices=[('1', 'batter'), ('2', 'bowler'), ('3', 'All-rounder'), ('4', 'Wk')], max_length=20)),
                ('Innings', models.PositiveIntegerField()),
                ('Strike_Rate', models.DecimalField(decimal_places=2, max_digits=5)),
                ('Total_runs', models.PositiveSmallIntegerField()),
                ('Total_wickets', models.PositiveSmallIntegerField()),
                ('Best_score_batting', models.PositiveSmallIntegerField(null=True)),
                ('Best_Score_bowling', teams.models.ScoreField(max_length=10)),
                ('Team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Owner_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator('^[a-zA-Z ]*$', 'Only alphanumeric characters are allowed.')])),
                ('Team_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
        ),
        migrations.CreateModel(
            name='Match_Stats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Inning_1_score', teams.models.ScoreField(max_length=10)),
                ('Inning_2_score', teams.models.ScoreField(max_length=10)),
                ('Inning_1_Bat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Inning_1_Bat', to='teams.team')),
                ('Inning_2_Bat', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Inning_2_Bat', to='teams.team')),
                ('Match_Number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='teams.match')),
                ('Player_of_the_match', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='teams.player')),
                ('Toss', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Toss', to='teams.team')),
                ('Winner', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='Winner', to='teams.team')),
            ],
        ),
        migrations.AddField(
            model_name='match',
            name='Away_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='away_team', to='teams.team'),
        ),
        migrations.AddField(
            model_name='match',
            name='Home_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='home_team', to='teams.team'),
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Coach_name', models.CharField(max_length=50)),
                ('Team_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
        ),
        migrations.CreateModel(
            name='Captain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Captain', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teams.player')),
                ('Team', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='teams.team')),
            ],
        ),
    ]
